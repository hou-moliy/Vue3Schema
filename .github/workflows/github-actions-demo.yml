name: test-coverage

on: [push] # 在 git push 的时候触发执行

jobs: # 执行的任务
  build: # 构建
    runs-on: ${{ matrix.os }} # 通过变量的形式指定运行平台

    strategy:
      matrix: # 矩阵，进行排列组合的到不同的运行环境
        node: [14, 16, 18] # node.js 版本
        os: [ubuntu-latest, macos-latest, windows-latest] # 操作系统

    name: Node.js ${{ matrix.node }} on ${{ matrix.os }} # 任务名称

    steps: # 流程，步骤
      - uses: actions/checkout@v4 # 继承已有的 action, https://github.com/actions/checkout
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4 # 预先配置好的设置 node 环境的任务
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npm run test:unit:cov # CI=true npm run test:cov
        env: # 环境变量 process.env
          CI: true # process.env.CI

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1 #
        with:
          token: ${{ secrets.ACCESS_TOKEN }} # 从 github 仓库的 secrets 中获取 ACCESS_TOKEN
          file: ./coverage/clover.xml # 上传的文件
          flags: unittests # 标记
          name: codecov-umbrella # 项目名称
          fail_ci_if_error: true # 如果上传失败，CI 任务失败
